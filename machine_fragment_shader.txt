#version 150 compatibility

#define rlerp(t,x,y) mix(x,y,t)

in  vec3  vnormal;
in  vec3  rpos;
uniform vec4 recolor;
out vec4  outcolor;
uniform vec4  fogdata;

vec3 compute_fog(vec3 color, vec3 relative_pos)
{
   float f = dot(relative_pos,relative_pos)*fogdata.w;
   f = rlerp(f, -2,1);
   f = clamp(f, 0.0, 1.0);
   f = 3.0*f*f - 2.0*f*f*f;
   return rlerp(f, color.xyz, fogdata.xyz);
}

void main()
{
   vec4 color = vec4(1.0,1.0,1.0,1.0);
   vec3 normal;

   if (vnormal.x == 0 && vnormal.y == 0 && vnormal.z == 0) {
      vec3 dx = dFdx(rpos);
      vec3 dy = dFdy(rpos);
      normal = cross(dx,dy);
   } else
      normal = vnormal;

   color.rgb *= (dot(normalize(normal), vec3(0.6,0,0.8))+1.0)/2.0f;
   color.rgba *= recolor.rgba;
   #if 1
   outcolor.xyz = compute_fog(color.xyz, rpos);
   outcolor.a = color.a;
   #else
   outcolor = color;
   #endif
}


